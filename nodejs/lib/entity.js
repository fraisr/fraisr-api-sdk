// Generated by CoffeeScript 1.4.0
var Collection, Entity, querystring, request, _;

_ = require("underscore");

request = require("superagent");

querystring = require("querystring");

Collection = require("./collection");

module.exports = Entity = (function() {
  /**
   * @private
   * @type {Object}
  */

  var _data;

  _data = null;

  /**
   * @constructor
   * @param  {Object} _data
  */


  function Entity(_data) {
    this._data = _data;
  }

  /**
   * @private
   * @param  {Object}   options
   * @param  {Function} callback
  */


  Entity._request = function(options, callback) {
    var method, params, r, type, url, _ref, _ref1, _ref2, _ref3, _ref4,
      _this = this;
    method = ((_ref = options.method) != null ? _ref : "get").toLowerCase();
    url = (_ref1 = options.url) != null ? _ref1 : null;
    if (!(url != null ? url.length : void 0)) {
      throw new Error("Where should I send the request? Please give me an URL.");
    }
    if (options.params != null) {
      params = querystring.stringify(options.params);
      if (params != null ? params.length : void 0) {
        url += "?" + params;
      }
    }
    type = (_ref2 = options.type) != null ? _ref2 : "entity";
    r = request[method](url);
    if (options.data != null) {
      r.send(options.data);
    }
    if (((_ref3 = options.key) != null ? _ref3.length : void 0) && ((_ref4 = options.secret) != null ? _ref4.length : void 0)) {
      r.auth(options.key, options.secret);
    }
    r.type("json");
    return r.end(function(error, response) {
      if (error != null) {
        return callback(error);
      }
      switch (type) {
        case "entity":
          return callback(null, new _this(response.body));
        case "collection":
          return callback(null, new Collection(response.body, _this));
      }
    });
  };

  /**
   * Resource listing
   * @param  {FraisrApi]} api
   * @param  {Function} callback
   * @param  {Object} params
   *         look at the params section in the API reference documenation
  */


  Entity.list = function(api, callback, params) {
    var options;
    params = _.defaults(params, {
      page: 1,
      limit: 100
    });
    options = {
      url: "" + api.url + "/" + this.resource,
      key: api.key,
      secret: api.secret,
      type: "collection",
      method: "GET",
      params: params
    };
    return this._request(options, callback);
  };

  /**
   * Resource look up
   * @param  {FraisrApi]} api
   * @param  {Function} callback
   * @param  {String} id
   *         The resource id
  */


  Entity.lookup = function(api, callback, id) {
    var options;
    options = {
      url: "" + api.url + "/" + this.resource + "/" + id,
      key: api.key,
      secret: api.secret,
      type: "entity",
      method: "GET"
    };
    return this._request(options, callback);
  };

  return Entity;

})();
